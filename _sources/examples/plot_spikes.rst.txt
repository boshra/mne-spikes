

.. _sphx_glr_examples_plot_spikes.py:


Plot a spike raster with MNE
----------------------------

Converting spike times to an MNE object, then plotting.

First we'll generate a bunch of random spike times, corresponding to
several trials of activity. We'll convert these into an mne-spikes ``Neuron``
object, then convert this to MNE so we can plot.



.. code-block:: python

    from mnespikes import Neuron
    import numpy as np
    import matplotlib.pyplot as plt

    sfreq = 100
    n_trials = 10
    time_mean = .5
    spikes_per_trial = [np.random.randint(25, 50) for _ in range(n_trials)]
    spiketimes = np.array([.1 * np.random.randn(ii) + time_mean
                           for ii in spikes_per_trial])
    # Each item is a list of spike times
    print(spiketimes[:2])





.. rst-class:: sphx-glr-script-out

 Out::

    [ array([ 0.66722683,  0.33323671,  0.51553044,  0.40658874,  0.39529234,
            0.53585029,  0.6127839 ,  0.50695266,  0.53205069,  0.38471946,
            0.60671676,  0.48705083,  0.59410825,  0.60309165,  0.46646136,
            0.45866395,  0.64735057,  0.50675484,  0.55247714,  0.48982827,
            0.52695596,  0.44389474,  0.56210332,  0.39825414,  0.57568046,
            0.42796571,  0.41038663,  0.50173766,  0.63263754,  0.43788289,
            0.54435209,  0.50857524,  0.43714812,  0.59375956])
     array([ 0.60901961,  0.53676778,  0.47675993,  0.46474862,  0.53295847,
            0.55626456,  0.61471665,  0.37944988,  0.5934255 ,  0.50426   ,
            0.53120292,  0.60483764,  0.62457236,  0.43955385,  0.56044252,
            0.35473579,  0.49822725,  0.38203688,  0.50957593,  0.60435135,
            0.38551932,  0.21760594,  0.52452247,  0.6531339 ,  0.47592569,
            0.43360118,  0.35288835,  0.47971432,  0.33684434,  0.5289853 ,
            0.58085966,  0.62695622,  0.63988046,  0.3681957 ,  0.6260267 ,
            0.47283131,  0.63605977,  0.48603083,  0.52747773,  0.38989025,
            0.61100324,  0.41768084,  0.51007186,  0.48451535,  0.43820578])]


Now we'll convert to a Neuron object. We can easily export this to a NumPy
array, or to an MNE object.



.. code-block:: python

    event_name = 'event!'
    neuron = Neuron(spiketimes, sfreq=sfreq, tmin=-.1, tmax=1.5,
                    events=[event_name] * len(spiketimes))
    print(neuron)
    print(neuron.spikes.shape)





.. rst-class:: sphx-glr-script-out

 Out::

    Name: None | Num Events: 10 | Events: ['event!'] | tmin/tmax: (-0.1, 1.5)
    (10, 160)


Now convert to an MNE object, which lets us do fancier plotting / analysis.



.. code-block:: python

    epochs = neuron.to_mne()
    fig = epochs.plot_image([0], show=False)
    plt.setp(fig[0].axes[1], ylim=[0, None], ylabel='spikes / s')
    plt.show()



.. image:: /examples/images/sphx_glr_plot_spikes_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    10 matching events found
    0 projection items activated
    0 bad epochs dropped


**Total running time of the script:** ( 0 minutes  2.057 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_spikes.py <plot_spikes.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_spikes.ipynb <plot_spikes.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
